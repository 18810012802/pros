/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.qdu.struts.action;

import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.qdu.model.LoginRecordBO;
import com.qdu.model.repaireBO;
import com.qdu.model.userBO;
import com.qdu.struts.form.LoginRecordForm;
import com.qdu.struts.form.RepaireForm;
import com.qdu.struts.form.UserForm;

/** 
 * MyEclipse Struts
 * Creation date: 05-09-2015
 * 
 * XDoclet definition:
 * @struts.action path="/loginRecord" name="loginRecordForm" scope="request"
 */
public class LoginRecordAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		LoginRecordForm loginRecordForm = (LoginRecordForm) form;// TODO Auto-generated method stub
		String type1=(String)request.getParameter("type");
		response.setContentType("text/html");
		response.setCharacterEncoding("utf-8");
		if(type1.equals("m_left"))
		{
			UserForm uf=(UserForm)request.getSession().getAttribute("userForm");
			if(uf==null)
			{
				return mapping.findForward("loginUI");
			}
			else{
				
				String type=uf.getType();
				if(type.equals("manager")){
					userBO ubb=new userBO();
					UserForm uf1=ubb.getUserForm(uf.getUserno());
					String base=loginRecordForm.getRecordno();
					String con=loginRecordForm.getUserno();
					String b=request.getParameter("base");
					String c=request.getParameter("con");
					if(b!=null)
					{
						base=b;
					}if(c!=null)
					{
						con=c;
					}	
					LoginRecordBO sbb=new LoginRecordBO();
					//sbb.updateStu(stuForm);
					int pageSize=6;
					int pageNow=1;
					String s_pageNow=request.getParameter("pageNow");
					if(s_pageNow!=null)
					{
					pageNow=Integer.parseInt(s_pageNow);
					}
					ArrayList<LoginRecordForm> al=new ArrayList<LoginRecordForm>();
					int pageCount=0;
					if(uf1.getJob().equals("manager"))
					{
					al=sbb.getLoginRecords(pageSize, pageNow, null,null,"userno",uf1.getUserno(),null,null);
					pageCount=sbb.getPageCount(pageSize,null,null,"userno",uf1.getUserno(),null,null);
					}
					else if(uf1.getJob().equals("sysmanager"))
					{
						al=sbb.getLoginRecords(pageSize, pageNow, null,null,null,null,null,null);
						pageCount=sbb.getPageCount(pageSize,null,null,null,null,null,null);
					}
					String[] p={pageCount+"",type1,base,con};
					request.setAttribute("al", al);
					request.setAttribute("pageCount", p);
					//request.setAttribute("uf", uf1);
					return mapping.findForward("loginRecord");
					
				}else if(type.equals("student"))
				//System.out.println((String)session.getAttribute("userno"));
				{
				
					//StuBO sbb=new StuBO();
					//StuForm sf=sbb.getStuBean(uf.getUserno());
					//request.setAttribute("uf",uf);
					
					//return mapping.findForward("changePassword");
				}else{
					return mapping.findForward("loginUI");
				}
			}
			
		}else if(type1.equals("m_deleteInfo"))
		{
			String recordno=(String)request.getParameter("recordno");
			LoginRecordBO l=new LoginRecordBO();
			l.deleteLoginRecord(recordno);
			UserForm uf=(UserForm)request.getSession().getAttribute("userForm");
			if(uf==null)
			{
				return mapping.findForward("loginUI");
			}
			else{
				
				String type=uf.getType();
				if(type.equals("manager")){
					userBO ubb=new userBO();
					UserForm uf1=ubb.getUserForm(uf.getUserno());
					String base=loginRecordForm.getRecordno();
					String con=loginRecordForm.getUserno();
					String b=request.getParameter("base");
					String c=request.getParameter("con");
					if(b!=null)
					{
						base=b;
					}if(c!=null)
					{
						con=c;
					}	
					LoginRecordBO sbb=new LoginRecordBO();
					//sbb.updateStu(stuForm);
					int pageSize=6;
					int pageNow=1;
					String s_pageNow=request.getParameter("pageNow");
					if(s_pageNow!=null)
					{
					pageNow=Integer.parseInt(s_pageNow);
					}
					ArrayList<LoginRecordForm> al=new ArrayList<LoginRecordForm>();
					int pageCount=0;
					if(uf1.getJob().equals("manager"))
					{
					al=sbb.getLoginRecords(pageSize, pageNow, null,null,"userno",uf1.getUserno(),null,null);
					pageCount=sbb.getPageCount(pageSize,null,null,"userno",uf1.getUserno(),null,null);
					}
					else if(uf1.getJob().equals("sysmanager"))
					{
						al=sbb.getLoginRecords(pageSize, pageNow, null,null,null,null,null,null);
						pageCount=sbb.getPageCount(pageSize,null,null,null,null,null,null);
					}
					String[] p={pageCount+"",type1,base,con};
					request.setAttribute("al", al);
					request.setAttribute("pageCount", p);
					//request.setAttribute("uf", uf1);
					return mapping.findForward("loginRecord");
					
				}else if(type.equals("student"))
				//System.out.println((String)session.getAttribute("userno"));
				{
				
					//StuBO sbb=new StuBO();
					//StuForm sf=sbb.getStuBean(uf.getUserno());
					//request.setAttribute("uf",uf);
					
					//return mapping.findForward("changePassword");
				}else{
					return mapping.findForward("loginUI");
				}
			}
			
		}
			
			
			else if(type1.equals("m_selectByBase"))
		{
			
			UserForm uf=(UserForm)request.getSession().getAttribute("userForm");
			if(uf==null)
			{
				return mapping.findForward("loginUI");
			}
			else{
				
				String type=uf.getType();
				if(type.equals("manager")){
					userBO ubb=new userBO();
					UserForm uf1=ubb.getUserForm(uf.getUserno());
					String base=loginRecordForm.getRecordno();
					String con=loginRecordForm.getUserno();
					String b=request.getParameter("base");
					String c=request.getParameter("con");
					if(b!=null)
					{
						base=b;
					}if(c!=null)
					{
						con=c;
					}	
					LoginRecordBO sbb=new LoginRecordBO();
					//sbb.updateStu(stuForm);
					int pageSize=6;
					int pageNow=1;
					String s_pageNow=request.getParameter("pageNow");
					if(s_pageNow!=null)
					{
					pageNow=Integer.parseInt(s_pageNow);
					}
					ArrayList<LoginRecordForm> al=new ArrayList<LoginRecordForm>();
					int pageCount=0;
					if(uf1.getJob().equals("manager"))
					{
					al=sbb.getLoginRecords(pageSize, pageNow,base,con,"userno",uf1.getUserno(),null,null);
					pageCount=sbb.getPageCount(pageSize,base,con,"userno",uf1.getUserno(),null,null);
					}
					else if(uf1.getJob().equals("sysmanager"))
					{
						al=sbb.getLoginRecords(pageSize, pageNow,base,con,null,null,null,null);
						pageCount=sbb.getPageCount(pageSize,base,con,null,null,null,null);
					}
					String[] p={pageCount+"",type1,base,con};
					request.setAttribute("al", al);
					request.setAttribute("pageCount", p);
					//request.setAttribute("uf", uf1);
					return mapping.findForward("loginRecord");
					
				}else if(type.equals("student"))
				//System.out.println((String)session.getAttribute("userno"));
				{
				
					//StuBO sbb=new StuBO();
					//StuForm sf=sbb.getStuBean(uf.getUserno());
					//request.setAttribute("uf",uf);
					
					//return mapping.findForward("changePassword");
				}else{
					return mapping.findForward("loginUI");
				}
			}	
			
		}
		
		return null;
	
}
	}