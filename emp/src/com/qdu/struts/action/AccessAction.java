/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.qdu.struts.action;

import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.qdu.model.AccessBO;
import com.qdu.model.InspectBO;
import com.qdu.model.userBO;
import com.qdu.struts.form.AccessToRecordForm;
import com.qdu.struts.form.InspectForm;
import com.qdu.struts.form.UserForm;

/** 
 * MyEclipse Struts
 * Creation date: 04-24-2015
 * 
 * XDoclet definition:
 * @struts.action path="/access" name="accessToRecordForm" scope="request"
 */
public class AccessAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		AccessToRecordForm accessToRecordForm = (AccessToRecordForm) form;
		// TODO Auto-generated method stub
		
		String type=request.getParameter("type");
		
		
		if(type.equals("left"))
		{
			
			
			String base=accessToRecordForm.getCardno();
		String con=accessToRecordForm.getFlag();
		String b=request.getParameter("base");
		String c=request.getParameter("con");
		if(b!=null)
		{
			base=b;
		}if(c!=null)
		{
			con=c;
		}	
			AccessBO ab=new AccessBO();
			int pageSize=6;
			int pageNow=1;
			String s_pageNow=request.getParameter("pageNow");
			if(s_pageNow!=null)
			{
			pageNow=Integer.parseInt(s_pageNow);
			}
			ArrayList<AccessToRecordForm> al=(ArrayList)ab.getAccessToRecords(pageSize, pageNow,null,null,null,null,null,null);
	        int pageCount=ab.getPageCount(pageSize,null,null,null,null,null,null);
	       
			String[] p={pageCount+"",type,base,con};
			request.setAttribute("al", al);
			request.setAttribute("pageCount", p);
		
			
			return mapping.findForward("access");
		}else if(type.equals("m_left"))
		{
			
			UserForm uf=(UserForm)request.getSession().getAttribute("userForm");
			UserForm uf1=new UserForm();
			if(uf==null)
			{
				return mapping.findForward("loginUI");
			}else{
				
				String type1=uf.getType();
				if(type1.equals("manager")){
					userBO ubb=new userBO();
					uf1=ubb.getUserForm(uf.getUserno());
					
					
					//return mapping.findForward("manager");
				}
			String base=accessToRecordForm.getCardno();
		String con=accessToRecordForm.getFlag();
		String b=request.getParameter("base");
		String c=request.getParameter("con");
		if(b!=null)
		{
			base=b;
		}if(c!=null)
		{
			con=c;
		}	
			AccessBO ab=new AccessBO();
			int pageSize=6;
			int pageNow=1;
			String s_pageNow=request.getParameter("pageNow");
			if(s_pageNow!=null)
			{
			pageNow=Integer.parseInt(s_pageNow);
			}
			ArrayList<AccessToRecordForm> al=(ArrayList)ab.getAccessToRecords(pageSize, pageNow,null,null,"yno",uf1.getYno(),"buildingno",uf1.getBno());
	        int pageCount=ab.getPageCount(pageSize,null,null,"yno",uf1.getYno(),"buildingno",uf1.getBno());
	        if(uf1.getJob().equals("sysmanager"))
			{
	        	al=(ArrayList)ab.getAccessToRecords(pageSize, pageNow,null,null,null,null,null,null);
	        	pageCount=ab.getPageCount(pageSize,null,null,null,null,null,null);

			}
			String[] p={pageCount+"",type,base,con};
			request.setAttribute("al", al);
			request.setAttribute("pageCount", p);
			request.setAttribute("uf", uf1);
			
     		return mapping.findForward("m_access");
		}
		}
		else if(type.equals("deleteInfo"))
		{
			AccessBO ab=new AccessBO();
			String recordno=request.getParameter("recordno");
			ab.deleteAccess(recordno);
			int pageSize=6;
			int pageNow=1;
			String s_pageNow=request.getParameter("pageNow");
			if(s_pageNow!=null)
			{
			pageNow=Integer.parseInt(s_pageNow);
			}
			ArrayList<AccessToRecordForm> al=(ArrayList)ab.getAccessToRecords(pageSize, pageNow,null,null,null,null,null,null);
	        int pageCount=ab.getPageCount(pageSize,null,null,null,null,null,null);
			String[] p={pageCount+""};
			request.setAttribute("al", al);
			request.setAttribute("pageCount", p);
		
			
			return mapping.findForward("access");
		}else if(type.equals("m_add"))
		{
			AccessBO ab=new AccessBO();
			String recordno=request.getParameter("recordno");
			ab.addAccess(accessToRecordForm);
			UserForm uf=(UserForm)request.getSession().getAttribute("userForm");
			UserForm uf1=new UserForm();
			if(uf==null)
			{
				return mapping.findForward("loginUI");
			}else{
				
				String type1=uf.getType();
				if(type1.equals("manager")){
					userBO ubb=new userBO();
					uf1=ubb.getUserForm(uf.getUserno());
					
					
					//return mapping.findForward("manager");
				}
			String base=accessToRecordForm.getCardno();
		String con=accessToRecordForm.getFlag();
		String b=request.getParameter("base");
		String c=request.getParameter("con");
		if(b!=null)
		{
			base=b;
		}if(c!=null)
		{
			con=c;
		}	
			//AccessBO ab=new AccessBO();
			int pageSize=6;
			int pageNow=1;
			String s_pageNow=request.getParameter("pageNow");
			if(s_pageNow!=null)
			{
			pageNow=Integer.parseInt(s_pageNow);
			}
			ArrayList<AccessToRecordForm> al=(ArrayList)ab.getAccessToRecords(pageSize, pageNow,null,null,"yno",uf1.getYno(),"buildingno",uf1.getBno());
	        int pageCount=ab.getPageCount(pageSize,null,null,"yno",uf1.getYno(),"buildingno",uf1.getBno());
			String[] p={pageCount+"",type,base,con};
			request.setAttribute("al", al);
			request.setAttribute("pageCount", p);
			request.setAttribute("uf", uf1);
			
     		return mapping.findForward("m_access");
		}
		}else if(type.equals("addInfo"))
		{
			AccessBO ab=new AccessBO();
			String recordno=request.getParameter("recordno");
			ab.addAccess(accessToRecordForm);
			int pageSize=6;
			int pageNow=1;
			String s_pageNow=request.getParameter("pageNow");
			if(s_pageNow!=null)
			{
			pageNow=Integer.parseInt(s_pageNow);
			}
			ArrayList<AccessToRecordForm> al=(ArrayList)ab.getAccessToRecords(pageSize, pageNow,null,null,null,null,null,null);
	        int pageCount=ab.getPageCount(pageSize,null,null,null,null,null,null);
			String[] p={pageCount+""};
			request.setAttribute("al", al);
			request.setAttribute("pageCount", p);
		
			
			return mapping.findForward("access");
		}else if(type.equals("m_accessByBase"))
		{
			UserForm uf=(UserForm)request.getSession().getAttribute("userForm");
			UserForm uf1=new UserForm();
			if(uf==null)
			{
				return mapping.findForward("loginUI");
			}else{
				
				String type1=uf.getType();
				if(type1.equals("manager")){
					userBO ubb=new userBO();
					uf1=ubb.getUserForm(uf.getUserno());
					
					
					//return mapping.findForward("manager");
				}
			
			String base=accessToRecordForm.getCardno();
			String con=accessToRecordForm.getFlag();
			String b=request.getParameter("base");
			String c=request.getParameter("con");
			if(b!=null)
			{
				base=b;
			}if(c!=null)
			{
				con=c;
			}	
				AccessBO ab=new AccessBO();
				int pageSize=6;
				int pageNow=1;
				String s_pageNow=request.getParameter("pageNow");
				if(s_pageNow!=null)
				{
				pageNow=Integer.parseInt(s_pageNow);
				}
				ArrayList<AccessToRecordForm> al=(ArrayList)ab.getAccessToRecords(pageSize, pageNow,base,con,"yno",uf1.getYno(),"buildingno",uf1.getBno());
		        int pageCount=ab.getPageCount(pageSize,base,con,"yno",uf1.getYno(),"buildingno",uf1.getBno());
		        if(uf1.getJob().equals("sysmanager"))
				{
		        	al=(ArrayList)ab.getAccessToRecords(pageSize, pageNow,base,con,null,null,null,null);
		        	pageCount=ab.getPageCount(pageSize,base,con,null,null,null,null);

				}
		        String[] p={pageCount+"",type,base,con};
				//System.out.println("well1");
				request.setAttribute("al", al);
				request.setAttribute("pageCount", p);
				request.setAttribute("uf", uf1);
				//System.out.println("well2");
				return mapping.findForward("m_access");
			
		}
		}else if(type.equals("accessByBase"))
		{
			
			
			String base=accessToRecordForm.getCardno();
			String con=accessToRecordForm.getFlag();
			String b=request.getParameter("base");
			String c=request.getParameter("con");
			if(b!=null)
			{
				base=b;
			}if(c!=null)
			{
				con=c;
			}	
				AccessBO ab=new AccessBO();
				int pageSize=6;
				int pageNow=1;
				String s_pageNow=request.getParameter("pageNow");
				if(s_pageNow!=null)
				{
				pageNow=Integer.parseInt(s_pageNow);
				}
				ArrayList<AccessToRecordForm> al=(ArrayList)ab.getAccessToRecords(pageSize, pageNow,base,con,null,null,null,null);
		        int pageCount=ab.getPageCount(pageSize,base,con,null,null,null,null);
				String[] p={pageCount+"",type,base,con};
				request.setAttribute("al", al);
				request.setAttribute("pageCount", p);
				
				
				return mapping.findForward("access");
			
		}else if(type.equals("m_deleteByCardno"))
		{
			AccessBO ab=new AccessBO();
			String recordno=request.getParameter("recordno");
			ab.deleteAccess(recordno);
			UserForm uf=(UserForm)request.getSession().getAttribute("userForm");
			UserForm uf1=new UserForm();
			if(uf==null)
			{
				return mapping.findForward("loginUI");
			}else{
				
				String type1=uf.getType();
				if(type1.equals("manager")){
					userBO ubb=new userBO();
					uf1=ubb.getUserForm(uf.getUserno());
					
					
					//return mapping.findForward("manager");
				}
			String base=accessToRecordForm.getCardno();
		String con=accessToRecordForm.getFlag();
		String b=request.getParameter("base");
		String c=request.getParameter("con");
		if(b!=null)
		{
			base=b;
		}if(c!=null)
		{
			con=c;
		}	
			//AccessBO ab=new AccessBO();
			int pageSize=6;
			int pageNow=1;
			String s_pageNow=request.getParameter("pageNow");
			if(s_pageNow!=null)
			{
			pageNow=Integer.parseInt(s_pageNow);
			}
			ArrayList<AccessToRecordForm> al=(ArrayList)ab.getAccessToRecords(pageSize, pageNow,null,null,"yno",uf1.getYno(),"buildingno",uf1.getBno());
	        int pageCount=ab.getPageCount(pageSize,null,null,"yno",uf1.getYno(),"buildingno",uf1.getBno());
			String[] p={pageCount+"",type,base,con};
			request.setAttribute("al", al);
			request.setAttribute("pageCount", p);
			request.setAttribute("uf", uf1);
			
     		return mapping.findForward("m_access");
		}
		}else if(type.equals("deleteByCardno"))
		{
			String base=accessToRecordForm.getCardno();
			String con=accessToRecordForm.getFlag();
			String b=request.getParameter("base");
			String c=request.getParameter("con");
			if(b!=null)
			{
				base=b;
			}if(c!=null)
			{
				con=c;
			}	
			AccessBO ab=new AccessBO();
			String recordno=request.getParameter("recordno");
			ab.deleteAccess(recordno);
			int pageSize=6;
			int pageNow=1;
			String s_pageNow=request.getParameter("pageNow");
			if(s_pageNow!=null)
			{
			pageNow=Integer.parseInt(s_pageNow);
			}
			ArrayList<AccessToRecordForm> al=(ArrayList)ab.getAccessToRecords(pageSize, pageNow,null,null,null,null,null,null);
	        int pageCount=ab.getPageCount(pageSize,null,null,null,null,null,null);
			String[] p={pageCount+"",type,base,con};
			request.setAttribute("al", al);
			request.setAttribute("pageCount", p);
		
			
			return mapping.findForward("access");
		}else{
		return null;
		}
	}
}