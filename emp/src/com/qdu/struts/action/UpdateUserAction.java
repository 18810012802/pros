/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.qdu.struts.action;

import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.qdu.model.StuBO;
import com.qdu.model.UserBean;
import com.qdu.model.userBO;
import com.qdu.struts.form.StuForm;
import com.qdu.struts.form.UserForm;

/** 
 * MyEclipse Struts
 * Creation date: 04-15-2015
 * 
 * XDoclet definition:
 * @struts.action path="/updateUser" name="userForm" scope="request"
 */
public class UpdateUserAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		UserForm userForm = (UserForm) form;// TODO Auto-generated method stub
		
		String type=request.getParameter("type");
		//System.out.println(userForm.getUserno()+"//"+userForm.getBno()+"//"+userForm.getPostcode());
		
		 if(type.equals("left"))
		{
			 userBO sbb=new userBO();
			//sbb.updateStu(stuForm);
			int pageSize=6;
			int pageNow=1;
			String s_pageNow=request.getParameter("pageNow");
			if(s_pageNow!=null)
			{
			pageNow=Integer.parseInt(s_pageNow);
			}
			ArrayList<UserForm> al=sbb.getUserFormWithSort(pageSize, pageNow, null);
			int pageCount=sbb.getPageCount(pageSize);
			String[] p={pageCount+""};
			request.setAttribute("al", al);
			request.setAttribute("pageCount", p);
			//request.setAttribute("sf", stuForm);
			return mapping.findForward("employee");
			
		}else if(type.equals("updateInfo"))
		{
			userBO sbb=new userBO();
			//sbb.updateStu(stuForm);
			String userno=request.getParameter("userno");
			
			UserForm uf=sbb.getUserForm(userno);
			request.setAttribute("uf", uf);
			return mapping.findForward("updateUser");
			
		}else if(type.equals("updateUser"))
		{			
			
			userBO sbb=new userBO();
			sbb.updateUserInfo(userForm);
			request.setAttribute("uf",userForm);
			return mapping.findForward("updateUser");
		}else if(type.equals("addInfo"))
		{
			userBO sbb=new userBO();
			sbb.addUser(userForm);
			int pageSize=6;
			int pageNow=1;
			String s_pageNow=request.getParameter("pageNow");
			if(s_pageNow!=null)
			{
			pageNow=Integer.parseInt(s_pageNow);
			}
			ArrayList<UserForm> al=sbb.getUserFormWithSort(pageSize, pageNow, null);
			int pageCount=sbb.getPageCount(pageSize);
			String[] p={pageCount+""};
			request.setAttribute("al", al);
			request.setAttribute("pageCount", p);
			//request.setAttribute("sf", stuForm);
			return mapping.findForward("employee");
			
		}
		else if(type.equals("deleteInfo"))
		{
			userBO sbb=new userBO();
			String userno=request.getParameter("userno");
			sbb.deleteUser(userno);
			int pageSize=6;
			int pageNow=1;
			String s_pageNow=request.getParameter("pageNow");
			if(s_pageNow!=null)
			{
			pageNow=Integer.parseInt(s_pageNow);
			}
			ArrayList<UserForm> al=sbb.getUserFormWithSort(pageSize, pageNow, null);
			int pageCount=sbb.getPageCount(pageSize);
			String[] p={pageCount+""};
			request.setAttribute("al", al);
			request.setAttribute("pageCount", p);
			//request.setAttribute("sf", stuForm);
			return mapping.findForward("employee");
			
		}else if(type.equals("selectByUserno"))
		{
			userBO sbb=new userBO();
			//sbb.updateStu(stuForm);
			//String stuno=request.getParameter("stuno");
			UserForm uf=sbb.getUserForm(userForm.getUserno());
			request.setAttribute("uf", uf);
			return mapping.findForward("updateUser");
			
		}
		
		
		
		else{
			userBO ubb=new userBO();
		if(ubb.updateUserInfo(userForm))
		{
			ArrayList<UserBean> al=new ArrayList();
			al=ubb.getUserInfo(userForm.getUserno());
		    UserBean ub=al.get(0);
			
			request.setAttribute("ub", ub);
			return mapping.findForward("ok");
		}else
		{
		
		return null;
		}
		}
	}
}