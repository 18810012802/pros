/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.qdu.struts.action;

import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.qdu.model.BuildingBO;
import com.qdu.model.BuildingBean;
import com.qdu.model.InspectBO;
import com.qdu.model.userBO;
import com.qdu.struts.form.InspectForm;
import com.qdu.struts.form.UserForm;

/** 
 * MyEclipse Struts
 * Creation date: 04-20-2015
 * 
 * XDoclet definition:
 * @struts.action path="/inspect" name="inspectForm" scope="request"
 */
public class InspectAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		InspectForm inspectForm = (InspectForm) form;// TODO Auto-generated method stub
		String type=(String)request.getParameter("type");
		if(type.equals("left"))
		{
			String base=inspectForm.getYno();
			String con=inspectForm.getSum();
			String b=request.getParameter("base");
			String c=request.getParameter("con");
			if(b!=null)
			{
				base=b;
			}if(c!=null)
			{
				con=c;
			}	
		InspectBO ib=new InspectBO();
		int pageSize=6;
		int pageNow=1;
		String s_pageNow=request.getParameter("pageNow");
		if(s_pageNow!=null)
		{
		pageNow=Integer.parseInt(s_pageNow);
		}
		ArrayList<InspectForm> al=(ArrayList)ib.getInspectionByPage(pageSize, pageNow,null,null,null,null,null,null);
        int pageCount=ib.getPageCount(pageSize,null,null,null,null,null,null);
		String[] p={pageCount+"",type,base,con};
		request.setAttribute("al", al);
		request.setAttribute("pageCount", p);
		return mapping.findForward("inspect");
		}else if(type.equals("m_left"))
		{
			
			UserForm uf=(UserForm)request.getSession().getAttribute("userForm");
			UserForm uf1=new UserForm();
			if(uf==null)
			{
				return mapping.findForward("loginUI");
			}else{
				
				String type1=uf.getType();
				if(type1.equals("manager")){
					userBO ubb=new userBO();
					uf1=ubb.getUserForm(uf.getUserno());
					
					
					//return mapping.findForward("manager");
				}
			String base=inspectForm.getYno();
			String con=inspectForm.getSum();
			String b=request.getParameter("base");
			String c=request.getParameter("con");
			if(b!=null)
			{
				base=b;
			}if(c!=null)
			{
				con=c;
			}	
			InspectBO ib=new InspectBO();
			int pageSize=6;
			int pageNow=1;
			String s_pageNow=request.getParameter("pageNow");
			if(s_pageNow!=null)
			{
			pageNow=Integer.parseInt(s_pageNow);
			}
			ArrayList<InspectForm> al=(ArrayList<InspectForm>)ib.getInspectionByPage(pageSize, pageNow,"inspection.yno",uf1.getYno(),"buildingno",uf1.getBno(),null,null);
	        int pageCount=ib.getPageCount(pageSize,"inspection.yno",uf1.getYno(),"buildingno",uf1.getBno(),null,null);
	        if(uf1.getJob().equals("sysmanager"))
			{
				al=(ArrayList<InspectForm>)ib.getInspectionByPage(pageSize, pageNow,null,null,null,null,null,null);

			    pageCount=ib.getPageCount(pageSize,null,null,null,null,null,null);
			}
			
	        String[] p={pageCount+"",type,base,con};
			request.setAttribute("al", al);
			request.setAttribute("pageCount", p);
			request.setAttribute("uf", uf1);
			return mapping.findForward("m_grade");
			}
		}else if(type.equals("m_selectByBase"))
		{
		
			UserForm uf=(UserForm)request.getSession().getAttribute("userForm");
			UserForm uf1=new UserForm();
			if(uf==null)
			{
				return mapping.findForward("loginUI");
			}else{
				
				String type1=uf.getType();
				if(type1.equals("manager")){
					userBO ubb=new userBO();
					uf1=ubb.getUserForm(uf.getUserno());
					
					
					//return mapping.findForward("manager");
				}
			String base=inspectForm.getYno();
			String con=inspectForm.getSum();
			String b=request.getParameter("base");
			String c=request.getParameter("con");
			if(b!=null)
			{
				base=b;
			}if(c!=null)
			{
				con=c;
			}	
			InspectBO ib=new InspectBO();
			int pageSize=6;
			int pageNow=1;
			String s_pageNow=request.getParameter("pageNow");
			if(s_pageNow!=null)
			{
			pageNow=Integer.parseInt(s_pageNow);
			}
			ArrayList<InspectForm> al=(ArrayList<InspectForm>)ib.getInspectionByPage(pageSize, pageNow,base,con,"inspection.yno",uf1.getYno(),"buildingno",uf1.getBno());
	        int pageCount=ib.getPageCount(pageSize,base,con,"inspection.yno",uf1.getYno(),"buildingno",uf1.getBno());
	        if(uf1.getJob().equals("sysmanager"))
			{
				al=(ArrayList<InspectForm>)ib.getInspectionByPage(pageSize, pageNow,base,con,null,null,null,null);

			    pageCount=ib.getPageCount(pageSize,base,con,null,null,null,null);
			}
			
			String[] p={pageCount+"",type,base,con};
			request.setAttribute("al", al);
			request.setAttribute("pageCount", p);
			request.setAttribute("uf", uf1);
			return mapping.findForward("m_grade");
			}
		}else if(type.equals("selectByBase"))
		{
		
			String base=inspectForm.getYno();
			String con=inspectForm.getSum();
			String b=request.getParameter("base");
			String c=request.getParameter("con");
			if(b!=null)
			{
				base=b;
			}if(c!=null)
			{
				con=c;
			}
		InspectBO ib=new InspectBO();
		int pageSize=6;
		int pageNow=1;
		String s_pageNow=request.getParameter("pageNow");
		if(s_pageNow!=null)
		{
		pageNow=Integer.parseInt(s_pageNow);
		}
		ArrayList<InspectForm> al=(ArrayList)ib.getInspectionByPage(pageSize, pageNow,base,con,null,null,null,null);
        int pageCount=ib.getPageCount(pageSize,base,con,null,null,null,null);
		String[] p={pageCount+"",type,base,con};
		request.setAttribute("al", al);
		request.setAttribute("pageCount", p);
		return mapping.findForward("inspect");
		}
		else if(type.equals("m_update"))
		{
			InspectBO ib=new InspectBO();
			String datetime=request.getParameter("datetime");
			String yno=request.getParameter("yno");
			String bno=request.getParameter("bno");
			String dormno=request.getParameter("dormno");
			//System.out.println(datetime+","+yno+","+bno+","+ dormno);
			InspectForm iff =ib.getInspectFormByDormno(datetime, yno, bno, dormno);
			request.setAttribute("iff", iff);
			return mapping.findForward("m_updateInspect");
		}
		
		else if(type.equals("update"))
		{
			InspectBO ib=new InspectBO();
			String datetime=request.getParameter("datetime");
			String yno=request.getParameter("yno");
			String bno=request.getParameter("bno");
			String dormno=request.getParameter("dormno");
			//System.out.println(datetime+","+yno+","+bno+","+ dormno);
			InspectForm iff =ib.getInspectFormByDormno(datetime, yno, bno, dormno);
			request.setAttribute("iff", iff);
			return mapping.findForward("updateInspect");
		}else if(type.equals("m_updatejsp"))
		{
			InspectBO ib=new InspectBO();
		    ib.updateInspect(inspectForm);
			
				String datetime=inspectForm.getDatetime();
				String yno=inspectForm.getYno();
				String bno=inspectForm.getBno();
				String dormno=inspectForm.getDormno();
				System.out.println(yno+""+bno+""+dormno+""+datetime);
				InspectForm iff =ib.getInspectFormByDormno(datetime, yno, bno, dormno);
				request.setAttribute("iff", iff);
			
			
			//request.setAttribute("iff", iff);
			return mapping.findForward("m_updateInspect");
		}
		else if(type.equals("updatejsp"))
		{
			InspectBO ib=new InspectBO();
			if(ib.updateInspect(inspectForm))
			{
				String datetime=inspectForm.getDatetime();
				String yno=inspectForm.getYno();
				String bno=inspectForm.getBno();
				String dormno=inspectForm.getDormno();
				InspectForm iff =ib.getInspectFormByDormno(datetime, yno, bno, dormno);
				request.setAttribute("iff", iff);
			}
			
			//request.setAttribute("iff", iff);
			return mapping.findForward("updateInspect");
		}else if(type.equals("m_delete"))
		{
			InspectBO ib=new InspectBO();
			String datetime=request.getParameter("datetime");
			String yno=request.getParameter("yno");
			String bno=request.getParameter("bno");
			String dormno=request.getParameter("dormno");
			ib.deleteInspect(datetime, yno, bno, dormno);
			
			
			UserForm uf=(UserForm)request.getSession().getAttribute("userForm");
			UserForm uf1=new UserForm();
			if(uf==null)
			{
				return mapping.findForward("loginUI");
			}else{
				
				String type1=uf.getType();
				if(type1.equals("manager")){
					userBO ubb=new userBO();
					uf1=ubb.getUserForm(uf.getUserno());
					
					
					//return mapping.findForward("manager");
				}
			String base=inspectForm.getYno();
			String con=inspectForm.getSum();
			String b=request.getParameter("base");
			String c=request.getParameter("con");
			if(b!=null)
			{
				base=b;
			}if(c!=null)
			{
				con=c;
			}	
			
			int pageSize=6;
			int pageNow=1;
			String s_pageNow=request.getParameter("pageNow");
			if(s_pageNow!=null)
			{
			pageNow=Integer.parseInt(s_pageNow);
			}
			ArrayList<InspectForm> al=(ArrayList<InspectForm>)ib.getInspectionByPage(pageSize, pageNow,"inspection.yno",uf1.getYno(),"buildingno",uf1.getBno(),null,null);
	        int pageCount=ib.getPageCount(pageSize,"inspection.yno",uf1.getYno(),"buildingno",uf1.getBno(),null,null);
			String[] p={pageCount+"",type,base,con};
			request.setAttribute("al", al);
			request.setAttribute("pageCount", p);
			request.setAttribute("uf", uf1);
			return mapping.findForward("m_grade");
		}
		}
			
			else if(type.equals("delete"))
			{
			InspectBO ib=new InspectBO();
			String datetime=request.getParameter("datetime");
			String yno=request.getParameter("yno");
			String bno=request.getParameter("bno");
			String dormno=request.getParameter("dormno");
			ib.deleteInspect(datetime, yno, bno, dormno);
			
		
		int pageSize=6;
		int pageNow=1;
		String s_pageNow=request.getParameter("pageNow");
		if(s_pageNow!=null)
		{
		pageNow=Integer.parseInt(s_pageNow);
		}
		ArrayList<InspectForm> al=(ArrayList)ib.getInspectionByPage(pageSize, pageNow,null,null,null,null,null,null);
        int pageCount=ib.getPageCount(pageSize,null,null,null,null,null,null);
		String[] p={pageCount+""};
		request.setAttribute("al", al);
		request.setAttribute("pageCount", p);
		return mapping.findForward("inspect");
		}
			else if(type.equals("m_add"))
			{
				InspectBO ib=new InspectBO();
				
				ib.addInspect(inspectForm);
				UserForm uf=(UserForm)request.getSession().getAttribute("userForm");
				UserForm uf1=new UserForm();
				if(uf==null)
				{
					return mapping.findForward("loginUI");
				}else{
					
					String type1=uf.getType();
					if(type1.equals("manager")){
						userBO ubb=new userBO();
						uf1=ubb.getUserForm(uf.getUserno());
						
						
						//return mapping.findForward("manager");
					}
				String base=inspectForm.getYno();
				String con=inspectForm.getSum();
				String b=request.getParameter("base");
				String c=request.getParameter("con");
				if(b!=null)
				{
					base=b;
				}if(c!=null)
				{
					con=c;
				}	
				//InspectBO ib=new InspectBO();
				int pageSize=6;
				int pageNow=1;
				String s_pageNow=request.getParameter("pageNow");
				if(s_pageNow!=null)
				{
				pageNow=Integer.parseInt(s_pageNow);
				}
				ArrayList<InspectForm> al=(ArrayList<InspectForm>)ib.getInspectionByPage(pageSize, pageNow,"inspection.yno",uf1.getYno(),"buildingno",uf1.getBno(),null,null);
		        int pageCount=ib.getPageCount(pageSize,"inspection.yno",uf1.getYno(),"buildingno",uf1.getBno(),null,null);
				String[] p={pageCount+"",type,base,con};
				request.setAttribute("al", al);
				request.setAttribute("pageCount", p);
				request.setAttribute("uf", uf1);
				return mapping.findForward("m_grade");
				
			}
			}
		else if(type.equals("add"))
		{
			InspectBO ib=new InspectBO();
			
			ib.addInspect(inspectForm);
			
		
		int pageSize=6;
		int pageNow=1;
		String s_pageNow=request.getParameter("pageNow");
		if(s_pageNow!=null)
		{
		pageNow=Integer.parseInt(s_pageNow);
		}
		ArrayList<InspectForm> al=(ArrayList)ib.getInspectionByPage(pageSize, pageNow,null,null,null,null,null,null);
        int pageCount=ib.getPageCount(pageSize,null,null,null,null,null,null);
		String[] p={pageCount+""};
		request.setAttribute("al", al);
		request.setAttribute("pageCount", p);
		return mapping.findForward("inspect");
		}
		else
		{
			System.out.println("else");
		return null;
		}
	}
}