/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.qdu.struts.action;

import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.qdu.model.StuBO;
import com.qdu.model.messageBO;
import com.qdu.model.userBO;
import com.qdu.struts.form.MessageForm;
import com.qdu.struts.form.StuForm;
import com.qdu.struts.form.UserForm;

/** 
 * MyEclipse Struts
 * Creation date: 05-02-2015
 * 
 * XDoclet definition:
 * @struts.action path="/message" name="messageForm" scope="request"
 */
public class MessageAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		MessageForm messageForm = (MessageForm) form;// TODO Auto-generated method stub
		String type=request.getParameter("type");
		if(type==null)
		{
			type="type";
		}
		//String type=request.getParameter("left");
		//System.out.println("type="+type);
		response.setContentType("text/html");
		response.setCharacterEncoding("utf-8");
		if(type.equals("addMessage"))
		{
			messageBO mbb=new messageBO();
			mbb.AddMessaage(messageForm);
			return mapping.findForward("message");
		}else if(type.equals("messageList"))
		{
			UserForm uf=(UserForm)request.getSession().getAttribute("userForm");
			if(uf==null)
			{
				return mapping.findForward("loginUI");
			}else{
				
				String t=uf.getType();
				/*if(t.equals("manager")){
					userBO ubb=new userBO();
					UserForm uf1=ubb.getUserForm(uf.getUserno());
					request.setAttribute("uf",uf1);
					
					return mapping.findForward("manager");
				}else if(t.equals("student"))
				//System.out.println((String)session.getAttribute("userno"));
				{*/
					messageBO mb=new messageBO();
					int pageSize=6;
					int pageNow=1;
					String s_pageNow=request.getParameter("pageNow");
					if(s_pageNow!=null)
					{
					pageNow=Integer.parseInt(s_pageNow);
					}
					ArrayList<MessageForm> al=new ArrayList<MessageForm>();
					al=mb.getMessageAndReplyBySender(pageSize, pageNow,null, uf.getUserno(), t);
					int pageCount=mb.getPageCount(pageSize,  uf.getUserno(), t);
					String[] p={pageCount+""};
					request.setAttribute("al", al);
					request.setAttribute("pageCount", p);
					
					
					return mapping.findForward("messageList");
				/*}else{
					return mapping.findForward("err");
				}*/
			}
		}else if(type.equals("left"))
			{
			messageBO mb=new messageBO();
			int pageSize=6;
			int pageNow=1;
			String s_pageNow=request.getParameter("pageNow");
			if(s_pageNow!=null)
			{
			pageNow=Integer.parseInt(s_pageNow);
			}
			ArrayList<MessageForm> al=new ArrayList<MessageForm>();
			al=mb.getMessage(pageSize, pageNow, null, null, null);
			int pageCount=mb.getPageCountByType(pageSize, null,null);
			String[] p={pageCount+"",type};
			request.setAttribute("al", al);
			request.setAttribute("pageCount", p);
			return mapping.findForward("message2");
		}else if(type.equals("deleteInfo"))
		{
		messageBO mb=new messageBO();
		String mesno=request.getParameter("mesno");
		mb.deleteMessage(mesno);
		int pageSize=6;
		int pageNow=1;
		String s_pageNow=request.getParameter("pageNow");
		if(s_pageNow!=null)
		{
		pageNow=Integer.parseInt(s_pageNow);
		}
		ArrayList<MessageForm> al=new ArrayList<MessageForm>();
		al=mb.getMessage(pageSize, pageNow, null, null, null);
		int pageCount=mb.getPageCountByType(pageSize, null,null);
		String[] p={pageCount+"",type};
		request.setAttribute("al", al);
		request.setAttribute("pageCount", p);
		return mapping.findForward("message2");
	}else if(type.equals("selectByBase"))
	{
		String t=request.getParameter("title");
		String con=request.getParameter("mescon");
		messageBO mb=new messageBO();
		int pageSize=6;
		int pageNow=1;
		String s_pageNow=request.getParameter("pageNow");
		if(s_pageNow!=null)
		{
		pageNow=Integer.parseInt(s_pageNow);
		}
		ArrayList<MessageForm> al=new ArrayList<MessageForm>();
		al=mb.getMessage(pageSize, pageNow, null, t, con);
		int pageCount=mb.getPageCountByType(pageSize, null,null);
		String[] p={pageCount+"",type};
		request.setAttribute("al", al);
		request.setAttribute("pageCount", p);
		return mapping.findForward("message2");
    }else if(type.equals("selectDetail"))
    		{
    	String  mesno=request.getParameter("mesno");
    	messageBO mb=new messageBO();
    	MessageForm mf=mb.getMessageFormByMesno(mesno);
    	request.setAttribute("mf", mf);
		
		return mapping.findForward("messageDetail");
    		}
		
		
			else{return null;}
	
   }
}