/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.qdu.struts.action;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.qdu.model.*;
import com.qdu.struts.form.StuForm;
import com.qdu.struts.form.UserForm;

/** 
 * MyEclipse Struts
 * Creation date: 04-16-2015
 * 
 * XDoclet definition:
 * @struts.action path="/stu" name="stuForm" scope="request"
 */
public class StuAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		StuForm stuForm = (StuForm) form;// TODO Auto-generated method stub
		String type=request.getParameter("type");
		if(type.equals("step1"))
		{
			String yno=request.getParameter("yno");
			if(yno!=null)
			{
				stuForm.setYno(yno);
			}
			BuildingBO bbb=new BuildingBO();
			int pageSize=6;
			int pageNow=1;
			String s_pageNow=request.getParameter("pageNow");
			if(s_pageNow!=null)
			{
			pageNow=Integer.parseInt(s_pageNow);
			}
			ArrayList<BuildingBean> al=bbb.getBuildingsByPage(pageSize, pageNow, stuForm.getYno());
            int pageCount=bbb.getPageCount(pageSize, stuForm.getYno());
			String[] p={pageCount+""};
			request.setAttribute("al", al);
			request.setAttribute("pageCount", p);
			
			request.setAttribute("sf", stuForm);
			
			return mapping.findForward("step2");
		}
		else if(type.equals("step2"))
		{
			DormBO dbb=new DormBO();
			int pageSize=6;
			int pageNow=1;
			String yno=request.getParameter("yno");
			String bno=request.getParameter("bno");
			if(yno!=null)
			{
				stuForm.setYno(yno);
			}
			if(bno!=null)
			{
				stuForm.setBuildingno(bno);
			}
			String s_pageNow=request.getParameter("pageNow");
			if(s_pageNow!=null)
			{
			pageNow=Integer.parseInt(s_pageNow);
			}
			
			ArrayList<DormBean> al=dbb.getDormsByPage(pageSize, pageNow, stuForm.getYno(), stuForm.getBuildingno());
			
			int pageCount=dbb.getPageCount(pageSize, stuForm.getYno(),stuForm.getBuildingno());
			String[] p={pageCount+""};
			request.setAttribute("al", al);
			request.setAttribute("pageCount", p);
			request.setAttribute("sf", stuForm);
			return mapping.findForward("step3");
		}
		else if(type.equals("step3"))
		{
			String yno=request.getParameter("yno");
			String bno=request.getParameter("bno");
			String dormno=request.getParameter("dormno");
			if(yno!=null)
			{
				stuForm.setYno(yno);
			}
			if(bno!=null)
			{
				stuForm.setBuildingno(bno);
			}
			if(dormno!=null)
			{
				stuForm.setDormno(dormno);
			}
			StuBO sbb=new StuBO();
			int pageSize=6;
			int pageNow=1;
			String s_pageNow=request.getParameter("pageNow");
			if(s_pageNow!=null)
			{
			pageNow=Integer.parseInt(s_pageNow);
			}
			
			ArrayList<StuBean> al=sbb.getStuBean(pageSize, pageNow, stuForm.getYno(), stuForm.getBuildingno(),stuForm.getDormno());			
		    int pageCount=sbb.getPageCount(pageSize, stuForm.getYno(),stuForm.getBuildingno(),stuForm.getDormno());
			String[] p={pageCount+""};
			request.setAttribute("al", al);
			request.setAttribute("pageCount", p);
			request.setAttribute("sf", stuForm);
			return mapping.findForward("step4");
		}
		else if(type.equals("step4"))
		{
			String yno=request.getParameter("yno");
			String bno=request.getParameter("bno");
			String dormno=request.getParameter("dormno");
			String bedno=request.getParameter("bedno");
			if(yno!=null)
			{
				stuForm.setYno(yno);
			}
			if(bno!=null)
			{
				stuForm.setBuildingno(bno);
			}
			if(dormno!=null)
			{
				stuForm.setDormno(dormno);
			}
			if(bedno!=null)
			{
				stuForm.setBedno(bedno);
			}
			StuBO sbb=new StuBO();
			
			int pageSize=6;
			int pageNow=1;
			String s_pageNow=request.getParameter("pageNow");
			if(s_pageNow!=null)
			{
			pageNow=Integer.parseInt(s_pageNow);
			}
			
			ArrayList<StuBean> al=sbb.getStuBean(pageSize, pageNow, stuForm.getYno(), stuForm.getBuildingno(),stuForm.getDormno());
			
			int pageCount=sbb.getPageCount(pageSize, stuForm.getYno(),stuForm.getBuildingno(),stuForm.getDormno());
			String[] p={pageCount+""};
			request.setAttribute("al", al);
			request.setAttribute("pageCount", p);
			request.setAttribute("sf", stuForm);
			return mapping.findForward("step5");
		}
		else if(type.equals("step5"))
		{
			//System.out.println("step5-start");
			StuBO sbb=new StuBO();	
		    sbb.AddStu(stuForm);		
			int pageSize=6;
			int pageNow=1;
			String s_pageNow=request.getParameter("pageNow");
			
			if(s_pageNow!=null)
			{
			pageNow=Integer.parseInt(s_pageNow);
			}
			//System.out.print( stuForm.getYno()+","+ stuForm.getBuildingno()+","+ stuForm.getDormno());
			ArrayList<StuBean> al=sbb.getStuBean(pageSize, pageNow, stuForm.getYno(), stuForm.getBuildingno(),stuForm.getDormno());
			
			 int pageCount=sbb.getPageCount(pageSize, stuForm.getYno(),stuForm.getBuildingno(),stuForm.getDormno());
				
			
			String[] p={pageCount+""};
			request.setAttribute("al", al);
			request.setAttribute("pageCount", p);
			request.setAttribute("sf", stuForm);
			return mapping.findForward("step4");
		}
		else if(type.equals("delete"))
		{
			System.out.println("delaction-start");
			StuBO sbb=new StuBO();
			String stuno=request.getParameter("stuno");
			StuForm stuForm1=sbb.getStuBean(stuno);
			//StuBO sbb1=new StuBO();
			sbb.deleteStu(stuno);
			
			int pageSize=6;
			int pageNow=1;
			String s_pageNow=request.getParameter("pageNow");
			
			if(s_pageNow!=null)
			{
			pageNow=Integer.parseInt(s_pageNow);
			}
			//System.out.print( stuForm1.getYno()+","+ stuForm1.getBuildingno()+","+ stuForm1.getDormno());
			ArrayList<StuBean> al=sbb.getStuBean(pageSize, pageNow, stuForm1.getYno(), stuForm1.getBuildingno(),stuForm1.getDormno());
			
			int pageCount=sbb.getPageCount(pageSize, stuForm1.getYno(),stuForm1.getBuildingno(),stuForm1.getDormno());
				
			
			String[] p={pageCount+""};
			request.setAttribute("al", al);
			request.setAttribute("pageCount", p);
			request.setAttribute("sf", stuForm1);
			return mapping.findForward("step5");
		}		
		else if(type.equals("update"))
		{			
			String stuno=request.getParameter("stuno");
			StuBO sbb=new StuBO();
			StuForm sf=sbb.getStuBean(stuno);
			request.setAttribute("sf", sf);
			return mapping.findForward("updateStep5");
		}
		else if(type.equals("updateStep5"))
		{
			StuBO sbb=new StuBO();
			sbb.updateStu(stuForm);
			int pageSize=6;
			int pageNow=1;
			String s_pageNow=request.getParameter("pageNow");
			if(s_pageNow!=null)
			{
			pageNow=Integer.parseInt(s_pageNow);
			}
			
			ArrayList<StuBean> al=sbb.getStuBean(pageSize, pageNow, stuForm.getYno(), stuForm.getBuildingno(),stuForm.getDormno());			
			int pageCount=sbb.getPageCount(pageSize, stuForm.getYno(),stuForm.getBuildingno(),stuForm.getDormno());
			String[] p={pageCount+""};
			request.setAttribute("al", al);
			request.setAttribute("pageCount", p);
			request.setAttribute("sf", stuForm);
			return mapping.findForward("step5");
		}else if(type.equals("m_left"))
		{
			
			UserForm uf=(UserForm)request.getSession().getAttribute("userForm");
			UserForm uf1=new UserForm();
			if(uf==null)
			{
				return mapping.findForward("loginUI");
			}else{
				
				String type1=uf.getType();
				if(type1.equals("manager")){
					userBO ubb=new userBO();
					uf1=ubb.getUserForm(uf.getUserno());
					
					
					//return mapping.findForward("manager");
				}/*else if(type1.equals("student"))
				//System.out.println((String)session.getAttribute("userno"));
				{
					StuBO sbb=new StuBO();
					StuForm sf=sbb.getStuBean(uf.getUserno());
					request.setAttribute("sf",sf);
					
					return mapping.findForward("student");
				}*/else{
					return mapping.findForward("err");
				}
			}
			
			
			
			
			
			
			String base=stuForm.getMajor();
			String con=stuForm.getName();
			String b=request.getParameter("base");
			String c=request.getParameter("con");
			if(b!=null)
			{
				base=b;
			}if(c!=null)
			{
				con=c;
			}
			StuBO sbb=new StuBO();
			//sbb.updateStu(stuForm);
			int pageSize=6;
			int pageNow=1;
			String s_pageNow=request.getParameter("pageNow");
			if(s_pageNow!=null)
			{
			pageNow=Integer.parseInt(s_pageNow);
			}
			ArrayList<StuForm> al=sbb.getStuFormWithSort(pageSize, pageNow, null,"yno",uf1.getYno(),"buildingno",uf1.getBno(),null,null);
			int pageCount=sbb.getPageCount(pageSize,null,null,"yno",uf1.getYno(),"buildingno",uf1.getBno());
			 if(uf1.getJob().equals("sysmanager"))
				{
				 al=sbb.getStuFormWithSort(pageSize, pageNow, null,null,null,null,null,null,null);
			    pageCount=sbb.getPageCount(pageSize,null,null,null,null,null,null);

				}
			String[] p={pageCount+"",type,base,con};
			request.setAttribute("al", al);
			request.setAttribute("pageCount", p);
			request.setAttribute("sf", stuForm);
			request.setAttribute("uf", uf1);
			return mapping.findForward("m_student");
			
		}
		
		
		else if(type.equals("left"))
		{
			String base=stuForm.getMajor();
			String con=stuForm.getName();
			String b=request.getParameter("base");
			String c=request.getParameter("con");
			if(b!=null)
			{
				base=b;
			}if(c!=null)
			{
				con=c;
			}
			StuBO sbb=new StuBO();
			//sbb.updateStu(stuForm);
			int pageSize=6;
			int pageNow=1;
			String s_pageNow=request.getParameter("pageNow");
			if(s_pageNow!=null)
			{
			pageNow=Integer.parseInt(s_pageNow);
			}
			ArrayList<StuForm> al=sbb.getStuFormWithSort(pageSize, pageNow, null,null,null,null,null,null,null);
			int pageCount=sbb.getPageCount(pageSize,null,null,null,null,null,null);
			String[] p={pageCount+"",type,base,con};
			request.setAttribute("al", al);
			request.setAttribute("pageCount", p);
			request.setAttribute("sf", stuForm);
			return mapping.findForward("stuInfo");
			
		}else if(type.equals("m_updateInfo"))
		{
			StuBO sbb=new StuBO();
			//sbb.updateStu(stuForm);
			String stuno=request.getParameter("stuno");
			StuForm sf=sbb.getStuBean(stuno);
			request.setAttribute("sf", sf);
			return mapping.findForward("m_updateStu");
			
		}else if(type.equals("updateInfo"))
		{
			StuBO sbb=new StuBO();
			//sbb.updateStu(stuForm);
			String stuno=request.getParameter("stuno");
			StuForm sf=sbb.getStuBean(stuno);
			request.setAttribute("sf", sf);
			return mapping.findForward("updateStu");
			
		}else if(type.equals("m_updateStu"))
		{			
			
			StuBO sbb=new StuBO();
			sbb.updateStu(stuForm);
			request.setAttribute("sf", stuForm);
			return mapping.findForward("m_updateStu");
		}else if(type.equals("updateStu"))
		{			
			
			StuBO sbb=new StuBO();
			sbb.updateStu(stuForm);
			request.setAttribute("sf", stuForm);
			return mapping.findForward("updateStu");
		}else if(type.equals("m_addInfo"))
		{
			StuBO sbb=new StuBO();
			sbb.addStu(stuForm);
			UserForm uf=(UserForm)request.getSession().getAttribute("userForm");
			UserForm uf1=new UserForm();
			if(uf==null)
			{
				return mapping.findForward("loginUI");
			}else{
				
				String type1=uf.getType();
				if(type1.equals("manager")){
					userBO ubb=new userBO();
					uf1=ubb.getUserForm(uf.getUserno());
					
					
					//return mapping.findForward("manager");
				}/*else if(type1.equals("student"))
				//System.out.println((String)session.getAttribute("userno"));
				{
					StuBO sbb=new StuBO();
					StuForm sf=sbb.getStuBean(uf.getUserno());
					request.setAttribute("sf",sf);
					
					return mapping.findForward("student");
				}*/else{
					return mapping.findForward("err");
				}
			}
			
			
			
			
			
			
			String base=stuForm.getMajor();
			String con=stuForm.getName();
			String b=request.getParameter("base");
			String c=request.getParameter("con");
			if(b!=null)
			{
				base=b;
			}if(c!=null)
			{
				con=c;
			}
			
			//sbb.updateStu(stuForm);
			int pageSize=6;
			int pageNow=1;
			String s_pageNow=request.getParameter("pageNow");
			if(s_pageNow!=null)
			{
			pageNow=Integer.parseInt(s_pageNow);
			}
			ArrayList<StuForm> al=sbb.getStuFormWithSort(pageSize, pageNow, null,"yno",uf1.getYno(),"buildingno",uf1.getBno(),null,null);
			int pageCount=sbb.getPageCount(pageSize,null,null,"yno",uf1.getYno(),"buildingno",uf1.getBno());
			String[] p={pageCount+"",type,base,con};
			request.setAttribute("al", al);
			request.setAttribute("pageCount", p);
			request.setAttribute("sf", stuForm);
			request.setAttribute("uf", uf1);
			return mapping.findForward("m_student");
		}
		else if(type.equals("addInfo"))
		{
			StuBO sbb=new StuBO();
			sbb.addStu(stuForm);
			int pageSize=6;
			int pageNow=1;
			String s_pageNow=request.getParameter("pageNow");
			if(s_pageNow!=null)
			{
			pageNow=Integer.parseInt(s_pageNow);
			}
			ArrayList<StuForm> al=sbb.getStuFormWithSort(pageSize, pageNow, null, null, null, null, null,null,null);
			int pageCount=sbb.getPageCount(pageSize, null, null, null, null,null,null);
			String[] p={pageCount+""};
			request.setAttribute("al", al);
			request.setAttribute("pageCount", p);
			//request.setAttribute("sf", stuForm);
			return mapping.findForward("stuInfo");
			
		}else if(type.equals("m_deleteInfo"))
		{
			StuBO sbb=new StuBO();
			String stuno=request.getParameter("stuno");
			sbb.deleteStu(stuno);
			UserForm uf=(UserForm)request.getSession().getAttribute("userForm");
			UserForm uf1=new UserForm();
			if(uf==null)
			{
				return mapping.findForward("loginUI");
			}else{
				
				String type1=uf.getType();
				if(type1.equals("manager")){
					userBO ubb=new userBO();
					uf1=ubb.getUserForm(uf.getUserno());
					
					
					//return mapping.findForward("manager");
				}/*else if(type1.equals("student"))
				//System.out.println((String)session.getAttribute("userno"));
				{
					StuBO sbb=new StuBO();
					StuForm sf=sbb.getStuBean(uf.getUserno());
					request.setAttribute("sf",sf);
					
					return mapping.findForward("student");
				}*/else{
					return mapping.findForward("err");
				}
			}
			
			
			
			
			
			
			String base=stuForm.getMajor();
			String con=stuForm.getName();
			String b=request.getParameter("base");
			String c=request.getParameter("con");
			if(b!=null)
			{
				base=b;
			}if(c!=null)
			{
				con=c;
			}
			
			//sbb.updateStu(stuForm);
			int pageSize=6;
			int pageNow=1;
			String s_pageNow=request.getParameter("pageNow");
			if(s_pageNow!=null)
			{
			pageNow=Integer.parseInt(s_pageNow);
			}
			ArrayList<StuForm> al=sbb.getStuFormWithSort(pageSize, pageNow, null,"yno",uf1.getYno(),"buildingno",uf1.getBno(),null,null);
			int pageCount=sbb.getPageCount(pageSize,null,null,"yno",uf1.getYno(),"buildingno",uf1.getBno());
			String[] p={pageCount+"",type,base,con};
			request.setAttribute("al", al);
			request.setAttribute("pageCount", p);
			request.setAttribute("sf", stuForm);
			request.setAttribute("uf", uf1);
			return mapping.findForward("m_student");
			
		}
		else if(type.equals("deleteInfo"))
		{
			StuBO sbb=new StuBO();
			String stuno=request.getParameter("stuno");
			sbb.deleteStu(stuno);
			int pageSize=6;
			int pageNow=1;
			String s_pageNow=request.getParameter("pageNow");
			if(s_pageNow!=null)
			{
			pageNow=Integer.parseInt(s_pageNow);
			}
			ArrayList<StuForm> al=sbb.getStuFormWithSort(pageSize, pageNow, null, null, null, null, null,null,null);
			int pageCount=sbb.getPageCount(pageSize, null, null, null, null,null,null);
			String[] p={pageCount+""};
			request.setAttribute("al", al);
			request.setAttribute("pageCount", p);
			//request.setAttribute("sf", stuForm);
			return mapping.findForward("stuInfo");
			
		}else if(type.equals("m_selectByBase"))
		{
			
			
			UserForm uf=(UserForm)request.getSession().getAttribute("userForm");
			UserForm uf1=new UserForm();
			if(uf==null)
			{
				return mapping.findForward("loginUI");
			}else{
				
				String type1=uf.getType();
				if(type1.equals("manager")){
					userBO ubb=new userBO();
					uf1=ubb.getUserForm(uf.getUserno());
					
					
					//return mapping.findForward("manager");
				}/*else if(type1.equals("student"))
				//System.out.println((String)session.getAttribute("userno"));
				{
					StuBO sbb=new StuBO();
					StuForm sf=sbb.getStuBean(uf.getUserno());
					request.setAttribute("sf",sf);
					
					return mapping.findForward("student");
				}*/else{
					return mapping.findForward("err");
				}
			}
			/*StuBO sbb=new StuBO();
			//sbb.updateStu(stuForm);
			//String stuno=request.getParameter("stuno");
			StuForm sf=sbb.getStuBean(stuForm.getStuno());
			request.setAttribute("sf", sf);
			return mapping.findForward("updateStu");*/
			String base=stuForm.getMajor();
			String con=stuForm.getName();
			String b=request.getParameter("base");
			String c=request.getParameter("con");
			if(b!=null)
			{
				base=b;
			}if(c!=null)
			{
				con=c;
			}
			StuBO sbb=new StuBO();
			//sbb.updateStu(stuForm);
			int pageSize=6;
			int pageNow=1;
			String s_pageNow=request.getParameter("pageNow");
			if(s_pageNow!=null)
			{
			pageNow=Integer.parseInt(s_pageNow);
			}
			ArrayList<StuForm> al=sbb.getStuFormWithSort(pageSize, pageNow, null,base,con,"yno",uf1.getYno(),"buildingno",uf1.getBno());
			int pageCount=sbb.getPageCount(pageSize,base,con,"yno",uf1.getYno(),"buildingno",uf1.getBno());
			 if(uf1.getJob().equals("sysmanager"))
				{
				 al=sbb.getStuFormWithSort(pageSize, pageNow, base,con,null,null,null,null,null);
			    pageCount=sbb.getPageCount(pageSize,base,con,null,null,null,null);

				}
			String[] p={pageCount+"",type,base,con};
			request.setAttribute("al", al);
			request.setAttribute("pageCount", p);
			request.setAttribute("sf", stuForm);
			request.setAttribute("uf", uf1);
			return mapping.findForward("m_student");
			
		}else if(type.equals("selectByBase"))
		{
			/*StuBO sbb=new StuBO();
			//sbb.updateStu(stuForm);
			//String stuno=request.getParameter("stuno");
			StuForm sf=sbb.getStuBean(stuForm.getStuno());
			request.setAttribute("sf", sf);
			return mapping.findForward("updateStu");*/
			String base=stuForm.getMajor();
			String con=stuForm.getName();
			String b=request.getParameter("base");
			String c=request.getParameter("con");
			if(b!=null)
			{
				base=b;
			}if(c!=null)
			{
				con=c;
			}
			StuBO sbb=new StuBO();
			//sbb.updateStu(stuForm);
			int pageSize=6;
			int pageNow=1;
			String s_pageNow=request.getParameter("pageNow");
			if(s_pageNow!=null)
			{
			pageNow=Integer.parseInt(s_pageNow);
			}
			ArrayList<StuForm> al=sbb.getStuFormWithSort(pageSize, pageNow, null,null,null,base,con,null,null);
			int pageCount=sbb.getPageCount(pageSize,null,null,base,con,null,null);
			String[] p={pageCount+"",type,base,con};
			request.setAttribute("al", al);
			request.setAttribute("pageCount", p);
			request.setAttribute("sf", stuForm);
			return mapping.findForward("stuInfo");
			
		}else if(type.equals("ssfbt"))
		{
			response.setContentType("text/html;charset=utf-8");
			FileInputStream fis=null;
			OutputStream os=null;
			try {
				
			//String filterFileName=java.net.URLEncoder.encode("ssfbt.jpg","utf-8");
		
			//response.setHeader("Content-Disposition", "attachment;filename="+filterFileName);
			response.setHeader("Content-Disposition", "attachment;filename=ssfbt.jpg");
			String filePath=this.getServlet().getServletContext().getRealPath("/images");
			String fileAllPath=filePath+"\\"+"ssfbt.jpg";
					
			byte []buffer=new byte[1024];

			int len=0;
			
				fis=new FileInputStream(fileAllPath);
				//os=new FileOutputStream("");
				//PrintWriter out = response.getWriter();
				os=response.getOutputStream();
				while((len=fis.read(buffer))>0)
				{
					os.write(buffer,0,len);
					//out.write(buffer,0,len);
				}
				
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}finally{
				
try {
	os.close();
	fis.close();
}
catch (IOException e) {
// TODO Auto-generated catch block
		e.printStackTrace();
}
}
return mapping.findForward("downList");
}else
{
	return null;
	}
		}
	}





